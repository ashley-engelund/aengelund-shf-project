# Workflow to run lint checks and tests.
#
#  RSpec tests using a postgres db with the sv_SE locale
#  Note that the rspec tests will not succeed because we have yet to install imagemagick requirements, etc.
#   That's OK.  We just want to be able to create and connect to the postgres sv_SE db
#
name: lint-and-test
on:
  workflow_dispatch:
  push:

# TODO: get the ruby version from the .ruby-version file in the repo
env:
  RAILS_ENV: test
  RUBY_VERSION: 2.6.6
  GEMFILE_RUBY_VERSION: 2.7.2
  PGHOST: localhost
  PGUSER: postgres
  PGPASSWORD: password
  OS_VERSION: ubuntu-18.04
  POSTGRES_SV_IMAGE: ashleyengelund/postgres-sv-se:postgres11-sv_se
  POSTGRES_SERVICE_USER: postgres
  POSTGRES_SERVICE_PASSWORD: password
  POSTGRES_SERVICE_DB: shf_project_test
  POSTGRES_SERVICE_PORT: 5432


jobs:

#  lint-checks:
#    name: Lint checks
#    runs-on: ${{ env.OS_VERSION }}
#
#
#  feature-tests:
#    name: Cucumber feature tests (only a select few)
#    runs-on: ${{ env.OS_VERSION }}


  rspec-tests:
    name: RSpec tests (only a select few)
    runs-on: $OS_VERSION

    services:
      postgres:
        # This image (from hub.docker.com) already has the sv_SE locale and collation set up.
        # It is based on postgres:11
        image: ${{ env.POSTGRES_SV_IMAGE }}

        env:
          POSTGRES_USER: ${{ env.POSTGRES_SERVICE_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_SERVICE_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_SERVICE_DB }}

        ports:
          # Maps tcp port on service container to the host
          - ${{ env.POSTGRES_SERVICE_PORT }}:${{ env.POSTGRES_SERVICE_PORT }}

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Connect to and set up the test database
        run: |
          bundle exec bin/rails db:create db:migrate
          bundle exec bin/rails db:schema:dump
          bundle exec bin/rails db:test:prepare


      - name: Run tests
        run: bundle exec bin/rspec spec/models/kommun_spec.rb
