name: rspec
on:
  workflow_dispatch:
  push:
#  pull_request:
#    types: [assigned, opened, edited, synchronize, reopened]



jobs:

#  create_sv_postgres:
#    name: Create postgres with sv_SE locale and collation
#    runs-on: ubuntu-latest
#
#    env:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: shf_project_test
#
##    container: sv_postgres
##      image: ashleyengelund/postgres-sv-se:postgres11-sv_se
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: PostgreSQL container build & run
#        run: |
#          # build an image based on the Dockerfile found in .github/workflows
#          # and named it 'postgresql_i'
#          docker build -t postgresql_i .github/workflows
#          docker run -d --name postgresql_t -p 5432:5432 -e POSTGRES_PASSWORD=postgres -e LC_ALL=sv_SE.UTF-8 postgresql_i
#
#      - name: wait for db
#        run: until docker exec postgresql_t pg_isready -U postgres; do sleep 1; done
#
#      - name: show locale
#        run: docker exec postgresql_t psql -U postgres -c "SHOW LC_COLLATE;"

  tests:
    name: Tests
    runs-on: ubuntu-latest

    env:
      RAILS_ENV: test
      GEMFILE_RUBY_VERSION: 2.7.2
      PGHOST: localhost
      PGUSER: postgres
      PGPASSWORD: password


    services:
      postgres:
        image: ashleyengelund/postgres-sv-se:postgres11-sv_se

        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: shf_project_test

        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup test database
        env:
          RAILS_ENV: test

        run: |
          bundle exec bin/rails db:create db:migrate
          bundle exec bin/rails db:schema:dump
          bundle exec bin/rails db:test:prepare


      - name: Run tests
        run: bin/rspec
