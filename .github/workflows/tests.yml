# Workflow to run RSpec tests using a postgres db with the sv_SE locale
#  Note that the rspec tests will not succeed because we have yet to install imagemagick requirements, etc.
#  That's OK.  We just want to be able to create and connect to the postgres sv_SE db
#
name: Tests - RSpec and Cuke
on:
  workflow_dispatch:
  push:

env:
  RAILS_ENV: test
  RUBY_VERSION: 2.6.6
  GEMFILE_RUBY_VERSION: 2.7.2

  PGHOST: localhost
  PGUSER: postgres
  PGPASSWORD: password

jobs:

  rspec:
    name: RSpec tests
    runs-on: ubuntu-18.04

    services:
      postgres:
        # This image (from hub.docker.com) already has the sv_SE locale and collation set up.
        # It is based on postgres:11
        image: ashleyengelund/postgres-sv-se:postgres11-sv_se

        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: shf_project_test

        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems (gems are cached)
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Connect to and set up the test database
        run: |
          bundle exec bin/rails db:create db:migrate
          bundle exec bin/rails db:schema:dump
          bundle exec bin/rails db:test:prepare

      - name: Run tests
        run: bundle exec bin/rspec spec/models/kommun_spec.rb

#      - name: Upload coverage results
#        uses: actions/upload-artifact@v2
#        with:
#          name: coverage-report
#          path: coverage


  coverage:
    runs-on: ubuntu-latest

    # This line will only run the coverage job if the test job passed
    needs: rspec

    steps:
#      - name: Download coverage report
#        uses: actions/download-artifact@v2
#        with:
#          name: coverage-report
#          path: coverage

      - name: SimpleCov Check
        uses: romanrod/simplecov-report-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

#        uses: vigetlabs/simplecov-check@1.0
#        with:
#          minimum_coverage: 100
#          coverage_path: coverage/.last_run.json


      # TODO - coverage report: SimpleCov? or Coveralls?
#      - name: Report to Coveralls (parallel)
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          path-to-lcov: ./coverage/lcov/shf-project.lcov
#          parallel: true
#          flag-name: rspec


#  post-test:
#    name: Post testing reporting
#    needs: [rspec]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Coveralls Finished
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          parallel-finished: true
